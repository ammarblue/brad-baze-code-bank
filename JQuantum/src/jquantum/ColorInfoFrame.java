/*
 * ColorInfoFrame.java
 *
 * Copyright (C) 2004-2008 Andreas de Vries
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see http://www.gnu.org/licenses
 * or write to the Free Software Foundation,Inc., 51 Franklin Street,
 * Fifth Floor, Boston, MA 02110-1301  USA
 */

package jquantum;

import javax.swing.UIManager;

/**
 * This class creates a frame showing information about the color representation
 * of complex numbers which is used in the jQuantum application.
 * 
 * @author Andreas de Vries
 * @version $Id: ColorInfoFrame.java,v 1.4 2008/02/19 vriesa Exp $
 */
public class ColorInfoFrame extends javax.swing.JFrame {
	private static final long serialVersionUID = -567972516;

	/**
	 * Creates new information frame about the color codes for complex numbers.
	 * 
	 * @param bundle
	 *            the language bundle determining the message to be displayed
	 */
	public ColorInfoFrame(java.util.Properties bundle) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			if (UIManager.getSystemLookAndFeelClassName().equals(
					"javax.swing.plaf.metal.MetalLookAndFeel")) {
				UIManager
						.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
			}
		} catch (Exception e) {
		}
		initComponents();
		int width = 500; // text width in pixel
		String text = "<html>";
		text += bundle.getProperty("ColorInfoFrame.text");
		text += "</html>";
		text = text.replaceAll("<p>", "<p style=\"width:" + width + "px\">");
		text = text.replaceAll("\n", ""); // "\n" destroys the HTML format

		textLabel.setText(text);

		closeButton.setText(bundle.getProperty("okButton.text"));

		pack();
		setLocation(50, 50);
		setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		logoLabel = new javax.swing.JLabel();
		leftPanel = new javax.swing.JPanel();
		panel = new javax.swing.JPanel();
		textLabel = new javax.swing.JLabel();
		imageLabel = new javax.swing.JLabel();
		buttonPanel = new javax.swing.JPanel();
		closeButton = new javax.swing.JButton();
		rightPanel = new javax.swing.JPanel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		logoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/jquantum/icons/jQLogoKlein.gif")));
		logoLabel.setPreferredSize(new java.awt.Dimension(171, 77));
		getContentPane().add(logoLabel, java.awt.BorderLayout.NORTH);

		leftPanel.setPreferredSize(new java.awt.Dimension(20, 10));
		getContentPane().add(leftPanel, java.awt.BorderLayout.WEST);

		panel.setLayout(new java.awt.BorderLayout());

		textLabel
				.setText("<html><h1> Color Map of the Complex Plane</h1>\n<p style=\"width:500px\">The hue, as a combination of color and brightness, of a complex number <i>z</i> depends uniquely on its phase <i>&#x03C6;</i> and its absolute value |<i>z</i>|. The color of the origin <i>z</i> = 0 remains undetermined, however since its absolute value is 0, the hue is black.\n</p>\n<p style=\"width:500px\">\nFor instance, a positive real number is red, whereas a negative real number is light blue.\n</p>\n");
		panel.add(textLabel, java.awt.BorderLayout.NORTH);

		imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		imageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(
				"/jquantum/icons/colorPlane.jpg")));
		imageLabel.setPreferredSize(new java.awt.Dimension(420, 267));
		panel.add(imageLabel, java.awt.BorderLayout.CENTER);

		closeButton.setText("OK");
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		buttonPanel.add(closeButton);

		panel.add(buttonPanel, java.awt.BorderLayout.SOUTH);

		getContentPane().add(panel, java.awt.BorderLayout.CENTER);

		rightPanel.setPreferredSize(new java.awt.Dimension(20, 10));
		getContentPane().add(rightPanel, java.awt.BorderLayout.EAST);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_closeButtonActionPerformed
		dispose();
	}// GEN-LAST:event_closeButtonActionPerformed

	/*
	 * public static void main(String args[]) {
	 * java.awt.EventQueue.invokeLater(new Runnable() { public void run() {
	 * String language = java.util.Locale.getDefault().getLanguage();
	 * java.util.Properties bundle = new java.util.Properties(); try {
	 * System.out.print("Try to load " + "/jquantum/Bundle_" + language +
	 * ".xml ...");
	 * bundle.loadFromXML(getClass().getResourceAsStream("/jquantum/Bundle_" +
	 * language + ".xml")); System.out.println(" successfully!"); }
	 * catch(Exception e) { try {
	 * bundle.loadFromXML(getClass().getResourceAsStream
	 * ("/jquantum/Bundle_en.xml"));
	 * System.out.println(" but loaded /jquantum/Bundle_en.xml!"); } catch
	 * (Exception e2) { e2.printStackTrace(); } } new ColorInfoFrame(bundle); }
	 * }); }
	 */

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel buttonPanel;
	private javax.swing.JButton closeButton;
	private javax.swing.JLabel imageLabel;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JLabel logoLabel;
	private javax.swing.JPanel panel;
	private javax.swing.JPanel rightPanel;
	private javax.swing.JLabel textLabel;
	// End of variables declaration//GEN-END:variables

}
